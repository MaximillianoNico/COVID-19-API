package routers

import (
	// "net/http"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	// _ "github.com/swaggo/gin-swagger/example/basic/docs"
	"github.com/MaximillianoNico/COVID-19-API/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/MaximillianoNico/COVID-19-API/internals/controllers"
	"github.com/gin-contrib/cors"
)

func SwaggerInit() {
	// programatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example REST API"
	docs.SwaggerInfo.Description = "This is a sample server."
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.Host = "localhost:8080"
	// docs.SwaggerInfo.BasePath = "/v2"
	docs.SwaggerInfo.Schemes = []string{"http", "https"}
}

func InitRouters() *gin.Engine {
	SwaggerInit()
	r := gin.New()
	r.Use(cors.Default())

	// set endpoint for swagger documentation
	url := ginSwagger.URL("http://localhost:8080/swagger/doc.json")
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler, url))

	api := r.Group("/api")
	{
		apiStatistic := api.Group("/statistic")
		{
			apiStatistic.GET("/latest", controllers.GetAll)
			apiStatistic.GET("/:date", controllers.GetAll)
			apiStatistic.GET("/filters/:city", controllers.GetStatistic)
			apiStatistic.GET("/symptoms/:language", controllers.GetQuestionSymptoms)
		}

		apiMasterData := api.Group("/master-data")
		{
			apiMasterData.GET("/country-list", controllers.GetCountryList)
		}
	}

	r.NoRoute(func(c *gin.Context) {
		// In gin this is how you return a JSON response
		c.JSON(404, gin.H{"message": "Not found"})
	})

	return r
}
